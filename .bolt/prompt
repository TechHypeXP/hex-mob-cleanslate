Overarching Instructions:
•	Documentation Principle: No code without documentation—every change must reference/update in-line comments or README.md; follow "Documented Change Validation" (validate need, document rationale/pre/post-state).
•	Testing Suite: Per task, run unit (Jest), integration (React Native Testing Library), end-to-end (Detox), performance (Expo Profiler), security (OWASP scans), and UI/UX (Puppeteer/Playwright for gestures/RTL).
•	Autonomy & Increments: Proceed sequentially; after testing, auto-commit to Git (if integrated) and generate Expo QR for Android/iOS testing. Track budget (e.g., log API calls < free limits).
•	Folder Structure (Task 1 - Fixed Foundation): Create this exact structure first—do not alter post-setup to avoid friction.
Folder Structure:
•	/apps/mobile (React Native app)
o	/src
	/ui (Components: e.g., SwipeCard.tsx, TabNavigation.tsx)
	/domain (DDD Models: e.g., PhotoModel.ts, GamificationEntity.ts)
	/application (Services: e.g., SwipeService.ts with CQRS)
	/infrastructure (Adapters: e.g., LocalMLAdapter.ts, CloudSyncStub.ts)
	/crosscutting (Utils: e.g., ErrorLogger.ts, PerformanceMonitor.ts)
	/assets (Icons, animations)
	/tests (All test types: unit, integration, e2e)
o	/app.json (Expo config)
o	/README.md (Offline docs: architecture, changes)
•	/packages/shared (Shared libs: APIs, types, utils)
o	/api (Supabase stubs/clients)
o	/types (Interfaces: e.g., PhotoItem)
o	/i18n (Global locales: English, Arabic, etc.)
•	/docs (Flowcharts, prompts history)

For all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.

By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.

Use icons from lucide-react for logos.